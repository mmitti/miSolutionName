//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace miSolutionName.Properties {
    using System;
    
    
    /// <summary>
    ///   ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
    /// </summary>
    // このクラスは StronglyTypedResourceBuilder クラスが ResGen
    // または Visual Studio のようなツールを使用して自動生成されました。
    // メンバーを追加または削除するには、.ResX ファイルを編集して、/str オプションと共に
    // ResGen を実行し直すか、または VS プロジェクトをビルドし直します。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class StringResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal StringResource() {
        }
        
        /// <summary>
        ///   このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("miSolutionName.Properties.StringResource", typeof(StringResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   すべてについて、現在のスレッドの CurrentUICulture プロパティをオーバーライドします
        ///   現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Environment に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string _100 {
            get {
                return ResourceManager.GetString("100", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Solution name bar Color(for window active). Default Value:#d9e0f8 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ActiveBackgroundDescription {
            get {
                return ResourceManager.GetString("ActiveBackgroundDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Solution name text Color(for window active). Default Value:#40568d に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ActiveForegroundDescription {
            get {
                return ResourceManager.GetString("ActiveForegroundDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Color に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Color {
            get {
                return ResourceManager.GetString("Color", resourceCulture);
            }
        }
        
        /// <summary>
        ///   DefaultColor に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string DefaultColor {
            get {
                return ResourceManager.GetString("DefaultColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Solution name bar Color(for window active). Example:#d9e0f8 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EditorAcriveBackgroundDescription {
            get {
                return ResourceManager.GetString("EditorAcriveBackgroundDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Solution name text Color(for window active). Example:#40568d に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EditorAcriveForegroundDescription {
            get {
                return ResourceManager.GetString("EditorAcriveForegroundDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   .suo specific color setting. If empty, use default color(from Visual Studio settings) or VSCode setting. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EditorColorDescription {
            get {
                return ResourceManager.GetString("EditorColorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   miSolutionName options in solution file. This setting priority over Visual Studio Options. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EditorDescription {
            get {
                return ResourceManager.GetString("EditorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Enable .suo Options に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EditorEnable {
            get {
                return ResourceManager.GetString("EditorEnable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Solution name bar Color(for window inactive). Example:#ffffff に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EditorInAcriveBackgroundDescription {
            get {
                return ResourceManager.GetString("EditorInAcriveBackgroundDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Solution name text Color(for window inactive). Example:#666666 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EditorInAcriveForegroundDescription {
            get {
                return ResourceManager.GetString("EditorInAcriveForegroundDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Find and load VS Code settings or workspace. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string EditorLoadVSCConfig {
            get {
                return ResourceManager.GetString("EditorLoadVSCConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Experiment に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Experiment {
            get {
                return ResourceManager.GetString("Experiment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Finding に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string Finding {
            get {
                return ResourceManager.GetString("Finding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   General に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string General {
            get {
                return ResourceManager.GetString("General", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Solution name bar Color(for window inactive). Default Value:#ffffff に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InActiveBackgroundDescription {
            get {
                return ResourceManager.GetString("InActiveBackgroundDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Solution name text Color(for window inactive). Default Value:#666666 に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string InActiveForegroundDescription {
            get {
                return ResourceManager.GetString("InActiveForegroundDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Found VSCode settings に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoadedVSCSetting {
            get {
                return ResourceManager.GetString("LoadedVSCSetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Not Found に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string NotFound {
            get {
                return ResourceManager.GetString("NotFound", resourceCulture);
            }
        }
    }
}
